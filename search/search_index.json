{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Learning to code Solidity and building this site to keep me accountable and active. \u00b6 Hey, you found this resource, hopefully it helps you on your Solidity journey. Feel free to comment regarding resources,help or any recommendations. Depending on time constraints ill try to update/reply where i can. \u00b6 If your a Developer or Trader in Digital Assets feel free to add me LinkedIn \u00b6 My background comes from Finance and Banking, ive been trading crypto since 2017 and now working for a Crypto Fund as a DeFi Analyst and amongst researching projects also learning to code Python, JS and Solidity. \u00b6 If you are totally new to coding and want to get started in Solidity you will need to create a Github Account along with downloading a code editor or IDE. You have an option to just use REMIX but we recommend VScode as it allows you to focus on many languages not just Solidity and it is the most popular amongst developers. \u00b6 If you want to reach out Email solditycode.services \u00b6","title":"Learning to code Solidity and building this site to keep me accountable and active."},{"location":"#learning-to-code-solidity-and-building-this-site-to-keep-me-accountable-and-active","text":"","title":"Learning to code Solidity and building this site to keep me accountable and active."},{"location":"#hey-you-found-this-resource-hopefully-it-helps-you-on-your-solidity-journey-feel-free-to-comment-regarding-resourceshelp-or-any-recommendations-depending-on-time-constraints-ill-try-to-updatereply-where-i-can","text":"","title":"Hey, you found this resource, hopefully it helps you on your Solidity journey. Feel free to comment regarding resources,help or any recommendations. Depending on time constraints ill try to update/reply where i can."},{"location":"#if-your-a-developer-or-trader-in-digital-assets-feel-free-to-add-me-linkedin","text":"","title":"If your a Developer or Trader in Digital Assets feel free to add me LinkedIn"},{"location":"#my-background-comes-from-finance-and-banking-ive-been-trading-crypto-since-2017-and-now-working-for-a-crypto-fund-as-a-defi-analyst-and-amongst-researching-projects-also-learning-to-code-python-js-and-solidity","text":"","title":"My background comes from Finance and Banking, ive been trading crypto since 2017 and now working for a Crypto Fund as a DeFi Analyst and amongst researching projects also learning to code Python, JS and Solidity."},{"location":"#if-you-are-totally-new-to-coding-and-want-to-get-started-in-solidity-you-will-need-to-create-a-github-account-along-with-downloading-a-code-editor-or-ide-you-have-an-option-to-just-use-remix-but-we-recommend-vscode-as-it-allows-you-to-focus-on-many-languages-not-just-solidity-and-it-is-the-most-popular-amongst-developers","text":"","title":"If you are totally new to coding and want to get started in Solidity you will need to create a Github Account along with downloading a code editor or IDE. You have an option to just use REMIX but we recommend VScode as it allows you to focus on many languages not just Solidity and it is the most popular amongst developers."},{"location":"#if-you-want-to-reach-out-email-solditycodeservices","text":"","title":"If you want to reach out Email solditycode.services"},{"location":"bootcamps/bloomtech-bootcamp/","text":"The Remix IDE allows you to write, compile and debug Solidity code. \u00b6 Step 1: Head over to Remix IDE \u00b6 Introduction \u00b6 The Remix IDE is a Solidity specific IDE to help you write smart contracts. It is an alternative to VScode.","title":"Bloomtech"},{"location":"bootcamps/bloomtech-bootcamp/#the-remix-ide-allows-you-to-write-compile-and-debug-solidity-code","text":"","title":"The Remix IDE allows you to write, compile and debug Solidity code."},{"location":"bootcamps/bloomtech-bootcamp/#step-1-head-over-to-remix-ide","text":"","title":"Step 1: Head over to Remix IDE"},{"location":"bootcamps/bloomtech-bootcamp/#introduction","text":"The Remix IDE is a Solidity specific IDE to help you write smart contracts. It is an alternative to VScode.","title":"Introduction"},{"location":"bootcamps/buildspace-bootcamp/","text":"Step 1: Head over to Open Zepplin Website \u00b6 The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'. \u00b6 The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at \u00b6 GitHub Recognition - Openzepplin","title":"Ethernaut Game"},{"location":"bootcamps/buildspace-bootcamp/#step-1-head-over-to-open-zepplin-website","text":"","title":"Step 1: Head over to Open Zepplin Website"},{"location":"bootcamps/buildspace-bootcamp/#the-ethernaut-is-a-web3solidity-based-wargame-inspired-on-overthewireorg-played-in-the-ethereum-virtual-machine-each-level-is-a-smart-contract-that-needs-to-be-hacked","text":"","title":"The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'."},{"location":"bootcamps/buildspace-bootcamp/#the-game-is-100-open-source-and-all-levels-are-contributions-made-by-other-players-do-you-have-an-interesting-idea-prs-are-welcome-at","text":"GitHub Recognition - Openzepplin","title":"The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at"},{"location":"bootcamps/chainshot-bootcamp/","text":"Step 1: Head over to Open Zepplin Website \u00b6 The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'. \u00b6 The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at \u00b6 GitHub Recognition - Openzepplin","title":"ChainShot"},{"location":"bootcamps/chainshot-bootcamp/#step-1-head-over-to-open-zepplin-website","text":"","title":"Step 1: Head over to Open Zepplin Website"},{"location":"bootcamps/chainshot-bootcamp/#the-ethernaut-is-a-web3solidity-based-wargame-inspired-on-overthewireorg-played-in-the-ethereum-virtual-machine-each-level-is-a-smart-contract-that-needs-to-be-hacked","text":"","title":"The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'."},{"location":"bootcamps/chainshot-bootcamp/#the-game-is-100-open-source-and-all-levels-are-contributions-made-by-other-players-do-you-have-an-interesting-idea-prs-are-welcome-at","text":"GitHub Recognition - Openzepplin","title":"The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at"},{"location":"bootcamps/consensys-bootcamp/","text":"Step 1: Head over to Open Zepplin Website \u00b6 The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'. \u00b6 The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at \u00b6 GitHub Recognition - Openzepplin","title":"Consensys Academy"},{"location":"bootcamps/consensys-bootcamp/#step-1-head-over-to-open-zepplin-website","text":"","title":"Step 1: Head over to Open Zepplin Website"},{"location":"bootcamps/consensys-bootcamp/#the-ethernaut-is-a-web3solidity-based-wargame-inspired-on-overthewireorg-played-in-the-ethereum-virtual-machine-each-level-is-a-smart-contract-that-needs-to-be-hacked","text":"","title":"The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'."},{"location":"bootcamps/consensys-bootcamp/#the-game-is-100-open-source-and-all-levels-are-contributions-made-by-other-players-do-you-have-an-interesting-idea-prs-are-welcome-at","text":"GitHub Recognition - Openzepplin","title":"The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at"},{"location":"bootcamps/crypto-zombies/","text":"Crypto Zombies \u00b6 Learn to Code Blockchain DApps By Building Simple Games \u00b6 Interactive Coding Lessons \u00b6 In-browser step-by-step lessons take you from the very basics of Solidity to creating your own fully-functional blockchain-based game. Even by the end of Lesson 1 (which can be completed in one sitting), you'll know enough to officially call yourself a Blockchain developer! Build a Zombie Army \u00b6 In Lesson 1, you will build a Zombie Factory to build your army. Every Zombie you create will have randomly generated DNA and have his own unique appearance. Further lessons (1 released each week) will add more functionality to your game, like the ability to battle other people's zombies! Who Made CryptoZombies? \u00b6 CryptoZombies is part of CleverFlare - We have interactive courses in Solidity and Smart Contracts, Blockchain Infrastructure and Deployment, Kubernetes, and Golang. Listen to the world\u2019s leading industry experts in the comforts of your browser with our fun and practical challenges.","title":"Crypto Zombies"},{"location":"bootcamps/crypto-zombies/#crypto-zombies","text":"","title":"Crypto Zombies"},{"location":"bootcamps/crypto-zombies/#learn-to-code-blockchain-dapps-by-building-simple-games","text":"","title":"Learn to Code Blockchain DApps By Building Simple Games"},{"location":"bootcamps/crypto-zombies/#interactive-coding-lessons","text":"In-browser step-by-step lessons take you from the very basics of Solidity to creating your own fully-functional blockchain-based game. Even by the end of Lesson 1 (which can be completed in one sitting), you'll know enough to officially call yourself a Blockchain developer!","title":"Interactive Coding Lessons"},{"location":"bootcamps/crypto-zombies/#build-a-zombie-army","text":"In Lesson 1, you will build a Zombie Factory to build your army. Every Zombie you create will have randomly generated DNA and have his own unique appearance. Further lessons (1 released each week) will add more functionality to your game, like the ability to battle other people's zombies!","title":"Build a Zombie Army"},{"location":"bootcamps/crypto-zombies/#who-made-cryptozombies","text":"CryptoZombies is part of CleverFlare - We have interactive courses in Solidity and Smart Contracts, Blockchain Infrastructure and Deployment, Kubernetes, and Golang. Listen to the world\u2019s leading industry experts in the comforts of your browser with our fun and practical challenges.","title":"Who Made CryptoZombies?"},{"location":"bootcamps/nft-school-bootcamp/","text":"Step 1: Head over to Open Zepplin Website \u00b6 The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'. \u00b6 The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at \u00b6 GitHub Recognition - Openzepplin","title":"NFT School"},{"location":"bootcamps/nft-school-bootcamp/#step-1-head-over-to-open-zepplin-website","text":"","title":"Step 1: Head over to Open Zepplin Website"},{"location":"bootcamps/nft-school-bootcamp/#the-ethernaut-is-a-web3solidity-based-wargame-inspired-on-overthewireorg-played-in-the-ethereum-virtual-machine-each-level-is-a-smart-contract-that-needs-to-be-hacked","text":"","title":"The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'."},{"location":"bootcamps/nft-school-bootcamp/#the-game-is-100-open-source-and-all-levels-are-contributions-made-by-other-players-do-you-have-an-interesting-idea-prs-are-welcome-at","text":"GitHub Recognition - Openzepplin","title":"The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at"},{"location":"bootcamps/pointer-bootcamp/","text":"Step 1: Head over to Open Zepplin Website \u00b6 The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'. \u00b6 The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at \u00b6 GitHub Recognition - Openzepplin","title":"Pointer"},{"location":"bootcamps/pointer-bootcamp/#step-1-head-over-to-open-zepplin-website","text":"","title":"Step 1: Head over to Open Zepplin Website"},{"location":"bootcamps/pointer-bootcamp/#the-ethernaut-is-a-web3solidity-based-wargame-inspired-on-overthewireorg-played-in-the-ethereum-virtual-machine-each-level-is-a-smart-contract-that-needs-to-be-hacked","text":"","title":"The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'."},{"location":"bootcamps/pointer-bootcamp/#the-game-is-100-open-source-and-all-levels-are-contributions-made-by-other-players-do-you-have-an-interesting-idea-prs-are-welcome-at","text":"GitHub Recognition - Openzepplin","title":"The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at"},{"location":"bootcamps/questbook-bootcamp/","text":"Step 1: Head over to Open Zepplin Website \u00b6 The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'. \u00b6 The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at \u00b6 GitHub Recognition - Openzepplin","title":"Questbook"},{"location":"bootcamps/questbook-bootcamp/#step-1-head-over-to-open-zepplin-website","text":"","title":"Step 1: Head over to Open Zepplin Website"},{"location":"bootcamps/questbook-bootcamp/#the-ethernaut-is-a-web3solidity-based-wargame-inspired-on-overthewireorg-played-in-the-ethereum-virtual-machine-each-level-is-a-smart-contract-that-needs-to-be-hacked","text":"","title":"The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'."},{"location":"bootcamps/questbook-bootcamp/#the-game-is-100-open-source-and-all-levels-are-contributions-made-by-other-players-do-you-have-an-interesting-idea-prs-are-welcome-at","text":"GitHub Recognition - Openzepplin","title":"The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at"},{"location":"solidity-code-games/crypto-zombies/","text":"Crypto Zombies \u00b6 Learn to Code Blockchain DApps By Building Simple Games \u00b6 Interactive Coding Lessons \u00b6 In-browser step-by-step lessons take you from the very basics of Solidity to creating your own fully-functional blockchain-based game. Even by the end of Lesson 1 (which can be completed in one sitting), you'll know enough to officially call yourself a Blockchain developer! Build a Zombie Army \u00b6 In Lesson 1, you will build a Zombie Factory to build your army. Every Zombie you create will have randomly generated DNA and have his own unique appearance. Further lessons (1 released each week) will add more functionality to your game, like the ability to battle other people's zombies! Who Made CryptoZombies? \u00b6 CryptoZombies is part of CleverFlare - We have interactive courses in Solidity and Smart Contracts, Blockchain Infrastructure and Deployment, Kubernetes, and Golang. Listen to the world\u2019s leading industry experts in the comforts of your browser with our fun and practical challenges.","title":"Crypto Zombies"},{"location":"solidity-code-games/crypto-zombies/#crypto-zombies","text":"","title":"Crypto Zombies"},{"location":"solidity-code-games/crypto-zombies/#learn-to-code-blockchain-dapps-by-building-simple-games","text":"","title":"Learn to Code Blockchain DApps By Building Simple Games"},{"location":"solidity-code-games/crypto-zombies/#interactive-coding-lessons","text":"In-browser step-by-step lessons take you from the very basics of Solidity to creating your own fully-functional blockchain-based game. Even by the end of Lesson 1 (which can be completed in one sitting), you'll know enough to officially call yourself a Blockchain developer!","title":"Interactive Coding Lessons"},{"location":"solidity-code-games/crypto-zombies/#build-a-zombie-army","text":"In Lesson 1, you will build a Zombie Factory to build your army. Every Zombie you create will have randomly generated DNA and have his own unique appearance. Further lessons (1 released each week) will add more functionality to your game, like the ability to battle other people's zombies!","title":"Build a Zombie Army"},{"location":"solidity-code-games/crypto-zombies/#who-made-cryptozombies","text":"CryptoZombies is part of CleverFlare - We have interactive courses in Solidity and Smart Contracts, Blockchain Infrastructure and Deployment, Kubernetes, and Golang. Listen to the world\u2019s leading industry experts in the comforts of your browser with our fun and practical challenges.","title":"Who Made CryptoZombies?"},{"location":"solidity-code-games/ethernaut/","text":"Step 1: Head over to Open Zepplin Website \u00b6 The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'. \u00b6 The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at \u00b6 GitHub Recognition - Openzepplin","title":"Buildspace"},{"location":"solidity-code-games/ethernaut/#step-1-head-over-to-open-zepplin-website","text":"","title":"Step 1: Head over to Open Zepplin Website"},{"location":"solidity-code-games/ethernaut/#the-ethernaut-is-a-web3solidity-based-wargame-inspired-on-overthewireorg-played-in-the-ethereum-virtual-machine-each-level-is-a-smart-contract-that-needs-to-be-hacked","text":"","title":"The Ethernaut is a Web3/Solidity based wargame inspired on overthewire.org, played in the Ethereum Virtual Machine. Each level is a smart contract that needs to be 'hacked'."},{"location":"solidity-code-games/ethernaut/#the-game-is-100-open-source-and-all-levels-are-contributions-made-by-other-players-do-you-have-an-interesting-idea-prs-are-welcome-at","text":"GitHub Recognition - Openzepplin","title":"The game is 100% open source and all levels are contributions made by other players. Do you have an interesting idea? PRs are welcome at"},{"location":"solidity-tutorials/buildspace-tutorial/","text":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat \u00b6 Step 1: Head over to Free Code Camp \u00b6 Introduction \u00b6 I'm a developer who's mostly been writing JavaScript, so the Solidity development environment was a bit hard to learn. About four months ago, I switched to Hardhat from Truffle. This cool new kid on the block drastically improved my coding experience. So today I want to share it with my fellow Solidity developers. In this post, I will walk you through the initial set-up, compilation, testing, debugging, and finally deployment. At the end of this post, you will be able understand how to deploy an NFT contract to the local network with Hardhat. The goal of this post is to make you familiar with Hardhat. I won\u2019t talk about how to write a test or Solidity syntax. However, you should be able to follow along without any Solidity knowledge if you know how to write JavaScript. See this repo for the code. Overview \u00b6 How to Set Up the Project How to Write and Compile the Contract How to Test the Contract How to Use console.log() in Hardhat How to Deploy the Contract Conclusion \u00b6 Hardhat has some other cool features like helpful stack trace, support for multiple Solidity compiler versions, a robust Mainnet forking, great TypeScript support and contract verification in Etherescan. But that\u2019s for another time! Recognition - Taisuke Mino","title":"Buildspace - The worlds largest on-chain network"},{"location":"solidity-tutorials/buildspace-tutorial/#solidity-tutorial-how-to-create-nfts-with-hardhat","text":"","title":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat"},{"location":"solidity-tutorials/buildspace-tutorial/#step-1-head-over-to-free-code-camp","text":"","title":"Step 1: Head over to Free Code Camp"},{"location":"solidity-tutorials/buildspace-tutorial/#introduction","text":"I'm a developer who's mostly been writing JavaScript, so the Solidity development environment was a bit hard to learn. About four months ago, I switched to Hardhat from Truffle. This cool new kid on the block drastically improved my coding experience. So today I want to share it with my fellow Solidity developers. In this post, I will walk you through the initial set-up, compilation, testing, debugging, and finally deployment. At the end of this post, you will be able understand how to deploy an NFT contract to the local network with Hardhat. The goal of this post is to make you familiar with Hardhat. I won\u2019t talk about how to write a test or Solidity syntax. However, you should be able to follow along without any Solidity knowledge if you know how to write JavaScript. See this repo for the code.","title":"Introduction"},{"location":"solidity-tutorials/buildspace-tutorial/#overview","text":"How to Set Up the Project How to Write and Compile the Contract How to Test the Contract How to Use console.log() in Hardhat How to Deploy the Contract","title":"Overview"},{"location":"solidity-tutorials/buildspace-tutorial/#conclusion","text":"Hardhat has some other cool features like helpful stack trace, support for multiple Solidity compiler versions, a robust Mainnet forking, great TypeScript support and contract verification in Etherescan. But that\u2019s for another time! Recognition - Taisuke Mino","title":"Conclusion"},{"location":"solidity-tutorials/free-code-camp-hardhat-tutorial/","text":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat \u00b6 Step 1: Head over to Free Code Camp \u00b6 Introduction \u00b6 I'm a developer who's mostly been writing JavaScript, so the Solidity development environment was a bit hard to learn. About four months ago, I switched to Hardhat from Truffle. This cool new kid on the block drastically improved my coding experience. So today I want to share it with my fellow Solidity developers. In this post, I will walk you through the initial set-up, compilation, testing, debugging, and finally deployment. At the end of this post, you will be able understand how to deploy an NFT contract to the local network with Hardhat. The goal of this post is to make you familiar with Hardhat. I won\u2019t talk about how to write a test or Solidity syntax. However, you should be able to follow along without any Solidity knowledge if you know how to write JavaScript. See this repo for the code. Overview \u00b6 How to Set Up the Project How to Write and Compile the Contract How to Test the Contract How to Use console.log() in Hardhat How to Deploy the Contract Conclusion \u00b6 Hardhat has some other cool features like helpful stack trace, support for multiple Solidity compiler versions, a robust Mainnet forking, great TypeScript support and contract verification in Etherescan. But that\u2019s for another time! Recognition - Taisuke Mino","title":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat"},{"location":"solidity-tutorials/free-code-camp-hardhat-tutorial/#solidity-tutorial-how-to-create-nfts-with-hardhat","text":"","title":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat"},{"location":"solidity-tutorials/free-code-camp-hardhat-tutorial/#step-1-head-over-to-free-code-camp","text":"","title":"Step 1: Head over to Free Code Camp"},{"location":"solidity-tutorials/free-code-camp-hardhat-tutorial/#introduction","text":"I'm a developer who's mostly been writing JavaScript, so the Solidity development environment was a bit hard to learn. About four months ago, I switched to Hardhat from Truffle. This cool new kid on the block drastically improved my coding experience. So today I want to share it with my fellow Solidity developers. In this post, I will walk you through the initial set-up, compilation, testing, debugging, and finally deployment. At the end of this post, you will be able understand how to deploy an NFT contract to the local network with Hardhat. The goal of this post is to make you familiar with Hardhat. I won\u2019t talk about how to write a test or Solidity syntax. However, you should be able to follow along without any Solidity knowledge if you know how to write JavaScript. See this repo for the code.","title":"Introduction"},{"location":"solidity-tutorials/free-code-camp-hardhat-tutorial/#overview","text":"How to Set Up the Project How to Write and Compile the Contract How to Test the Contract How to Use console.log() in Hardhat How to Deploy the Contract","title":"Overview"},{"location":"solidity-tutorials/free-code-camp-hardhat-tutorial/#conclusion","text":"Hardhat has some other cool features like helpful stack trace, support for multiple Solidity compiler versions, a robust Mainnet forking, great TypeScript support and contract verification in Etherescan. But that\u2019s for another time! Recognition - Taisuke Mino","title":"Conclusion"},{"location":"solidity-youtube-tutorials/dapp-university-youtube/","text":"Solidity Tutorial - A Full Course on Ethereum, Blockchain Development, Smart Contracts, and the EVM \u00b6 Step 1: Head over to Free Code Camp \u00b6 Introduction \u00b6 Learn to program in Solidity in this full tutorial from Dapp University. Solidity is an object-oriented programming language for writing smart contracts. It is used for implementing smart contracts on various blockchain platforms, most notably, Ethereum. Overview \u00b6 In this course you will learn how to write Ethereum smart contracts for the blockchain using the Solidity programming language. You don't need to know anything about Solidity or the blockchain to follow along. Conclusion \u00b6 Dapp University has some free courses and also paid courses. Recognition - Dapp University","title":"Solidity Tutorial - A Full Course on Ethereum, Blockchain Development, Smart Contracts, and the EVM"},{"location":"solidity-youtube-tutorials/dapp-university-youtube/#solidity-tutorial-a-full-course-on-ethereum-blockchain-development-smart-contracts-and-the-evm","text":"","title":"Solidity Tutorial - A Full Course on Ethereum, Blockchain Development, Smart Contracts, and the EVM"},{"location":"solidity-youtube-tutorials/dapp-university-youtube/#step-1-head-over-to-free-code-camp","text":"","title":"Step 1: Head over to Free Code Camp"},{"location":"solidity-youtube-tutorials/dapp-university-youtube/#introduction","text":"Learn to program in Solidity in this full tutorial from Dapp University. Solidity is an object-oriented programming language for writing smart contracts. It is used for implementing smart contracts on various blockchain platforms, most notably, Ethereum.","title":"Introduction"},{"location":"solidity-youtube-tutorials/dapp-university-youtube/#overview","text":"In this course you will learn how to write Ethereum smart contracts for the blockchain using the Solidity programming language. You don't need to know anything about Solidity or the blockchain to follow along.","title":"Overview"},{"location":"solidity-youtube-tutorials/dapp-university-youtube/#conclusion","text":"Dapp University has some free courses and also paid courses. Recognition - Dapp University","title":"Conclusion"},{"location":"solidity-youtube-tutorials/free-code-camp-hardhat-tutorial/","text":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat \u00b6 Step 1: Head over to Free Code Camp \u00b6 Introduction \u00b6 I'm a developer who's mostly been writing JavaScript, so the Solidity development environment was a bit hard to learn. About four months ago, I switched to Hardhat from Truffle. This cool new kid on the block drastically improved my coding experience. So today I want to share it with my fellow Solidity developers. In this post, I will walk you through the initial set-up, compilation, testing, debugging, and finally deployment. At the end of this post, you will be able understand how to deploy an NFT contract to the local network with Hardhat. The goal of this post is to make you familiar with Hardhat. I won\u2019t talk about how to write a test or Solidity syntax. However, you should be able to follow along without any Solidity knowledge if you know how to write JavaScript. See this repo for the code. Overview \u00b6 How to Set Up the Project How to Write and Compile the Contract How to Test the Contract How to Use console.log() in Hardhat How to Deploy the Contract Conclusion \u00b6 Hardhat has some other cool features like helpful stack trace, support for multiple Solidity compiler versions, a robust Mainnet forking, great TypeScript support and contract verification in Etherescan. But that\u2019s for another time! Recognition - Taisuke Mino","title":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat"},{"location":"solidity-youtube-tutorials/free-code-camp-hardhat-tutorial/#solidity-tutorial-how-to-create-nfts-with-hardhat","text":"","title":"Solidity Tutorial \u2013 How to Create NFTs with Hardhat"},{"location":"solidity-youtube-tutorials/free-code-camp-hardhat-tutorial/#step-1-head-over-to-free-code-camp","text":"","title":"Step 1: Head over to Free Code Camp"},{"location":"solidity-youtube-tutorials/free-code-camp-hardhat-tutorial/#introduction","text":"I'm a developer who's mostly been writing JavaScript, so the Solidity development environment was a bit hard to learn. About four months ago, I switched to Hardhat from Truffle. This cool new kid on the block drastically improved my coding experience. So today I want to share it with my fellow Solidity developers. In this post, I will walk you through the initial set-up, compilation, testing, debugging, and finally deployment. At the end of this post, you will be able understand how to deploy an NFT contract to the local network with Hardhat. The goal of this post is to make you familiar with Hardhat. I won\u2019t talk about how to write a test or Solidity syntax. However, you should be able to follow along without any Solidity knowledge if you know how to write JavaScript. See this repo for the code.","title":"Introduction"},{"location":"solidity-youtube-tutorials/free-code-camp-hardhat-tutorial/#overview","text":"How to Set Up the Project How to Write and Compile the Contract How to Test the Contract How to Use console.log() in Hardhat How to Deploy the Contract","title":"Overview"},{"location":"solidity-youtube-tutorials/free-code-camp-hardhat-tutorial/#conclusion","text":"Hardhat has some other cool features like helpful stack trace, support for multiple Solidity compiler versions, a robust Mainnet forking, great TypeScript support and contract verification in Etherescan. But that\u2019s for another time! Recognition - Taisuke Mino","title":"Conclusion"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/","text":"Learn Solidity, Blockchain, and Smart Contracts in a Free 16-Hour Course \u00b6 Step 1: Head over to Free Code Camp \u00b6 Introduction \u00b6 Blockchain engineers are in extreme demand. Almost every day they are building billion dollar applications. We just released a full course on the freeCodeCamp.org YouTube channel that will teach you all about Solidity, the blockchain, and smart contracts. Solidity is an object-oriented programming language for writing smart contracts. This course will give you a full introduction into all of the core concepts in blockchain, smart contracts, solidity, NFTs/ERC721s, ERC20s, Coding Decentralized Finance (DeFi), python and solidity, Chainlink, Ethereum, upgradable smart contracts, and full stack blockchain development. Overview \u00b6 Here are all the sections covered in this comprehensive course: Lesson 0: Welcome To Blockchain \u00b6 What is a Blockchain? Making Your First Transaction How Do Blockchains Work? Consensus The Future Miscellaneous Lesson 1: Welcome to Remix! Simple Storage \u00b6 Everything in this section can be read about in the Solidity Documentation Remix Basic Solidity Deploying to a \"Live\" network Lesson 2: Storage Factory \u00b6 Inheritance, Factory Pattern, and Interacting with External Contracts Lesson 3: Fund Me Payable, msg.sender, msg.value, Units of Measure Chainlink Oracles Importing from NPM and Advanced Solidity Lesson 4: Web3.py Simple Storage \u00b6 Installing VSCode, Python, and Web3 Our First Python Script with Web3.py - Deploying a Contract Interacting with Our Contract in Python & Web3.py Lesson 5: Brownie Simple Storage \u00b6 Brownie Introduction Installing Brownie Brownie Simple Storage Project Testing Basics Lesson 6: Brownie Fund Me \u00b6 Introduction Dependencies, Deploying, and Networks Funding and Withdrawing Python Scripts Testing across networks Git Lesson 7: SmartContract Lottery \u00b6 Introduction Lottery.sol Testing Lottery.sol Lottery.sol Testnet Deployment Lesson 8: Chainlink Mix \u00b6 Brownie Mixes Lesson 9: ERC20s, EIPs, and Token Standards \u00b6 Lesson 10: Defi & Aave \u00b6 Defi Intro Aave UI Programmatic Interactions with Aave Testing Lesson 11: NFTs \u00b6 Non-Technical Explainer Simple NFT SimpleCollectible Testing Advanced NFT Advanced deploy_and_create Creating Metadata & IPFS Lesson 12: Upgrades \u00b6 Introduction to upgrading smart contracts Upgrades-mix and code Testing Upgrades Upgrades on a testnet Bonus Lesson 13: Full Stack Defi Defi Stake Yield Brownie Scripts & Tests Testing our Defi Stake Yield Brownie Dapp Front End / Full Stack Closing and Summary Security Where do I go now? Learning More Community Hackathons","title":"Learn Solidity, Blockchain, and Smart Contracts in a Free 16-Hour Course"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#learn-solidity-blockchain-and-smart-contracts-in-a-free-16-hour-course","text":"","title":"Learn Solidity, Blockchain, and Smart Contracts in a Free 16-Hour Course"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#step-1-head-over-to-free-code-camp","text":"","title":"Step 1: Head over to Free Code Camp"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#introduction","text":"Blockchain engineers are in extreme demand. Almost every day they are building billion dollar applications. We just released a full course on the freeCodeCamp.org YouTube channel that will teach you all about Solidity, the blockchain, and smart contracts. Solidity is an object-oriented programming language for writing smart contracts. This course will give you a full introduction into all of the core concepts in blockchain, smart contracts, solidity, NFTs/ERC721s, ERC20s, Coding Decentralized Finance (DeFi), python and solidity, Chainlink, Ethereum, upgradable smart contracts, and full stack blockchain development.","title":"Introduction"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#overview","text":"Here are all the sections covered in this comprehensive course:","title":"Overview"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-0-welcome-to-blockchain","text":"What is a Blockchain? Making Your First Transaction How Do Blockchains Work? Consensus The Future Miscellaneous","title":"Lesson 0: Welcome To Blockchain"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-1-welcome-to-remix-simple-storage","text":"Everything in this section can be read about in the Solidity Documentation Remix Basic Solidity Deploying to a \"Live\" network","title":"Lesson 1: Welcome to Remix! Simple Storage"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-2-storage-factory","text":"Inheritance, Factory Pattern, and Interacting with External Contracts Lesson 3: Fund Me Payable, msg.sender, msg.value, Units of Measure Chainlink Oracles Importing from NPM and Advanced Solidity","title":"Lesson 2: Storage Factory"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-4-web3py-simple-storage","text":"Installing VSCode, Python, and Web3 Our First Python Script with Web3.py - Deploying a Contract Interacting with Our Contract in Python & Web3.py","title":"Lesson 4: Web3.py Simple Storage"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-5-brownie-simple-storage","text":"Brownie Introduction Installing Brownie Brownie Simple Storage Project Testing Basics","title":"Lesson 5: Brownie Simple Storage"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-6-brownie-fund-me","text":"Introduction Dependencies, Deploying, and Networks Funding and Withdrawing Python Scripts Testing across networks Git","title":"Lesson 6: Brownie Fund Me"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-7-smartcontract-lottery","text":"Introduction Lottery.sol Testing Lottery.sol Lottery.sol Testnet Deployment","title":"Lesson 7: SmartContract Lottery"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-8-chainlink-mix","text":"Brownie Mixes","title":"Lesson 8: Chainlink Mix"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-9-erc20s-eips-and-token-standards","text":"","title":"Lesson 9: ERC20s, EIPs, and Token Standards"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-10-defi-aave","text":"Defi Intro Aave UI Programmatic Interactions with Aave Testing","title":"Lesson 10: Defi &amp; Aave"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-11-nfts","text":"Non-Technical Explainer Simple NFT SimpleCollectible Testing Advanced NFT Advanced deploy_and_create Creating Metadata & IPFS","title":"Lesson 11: NFTs"},{"location":"solidity-youtube-tutorials/free-code-camp-solidity-youtube/#lesson-12-upgrades","text":"Introduction to upgrading smart contracts Upgrades-mix and code Testing Upgrades Upgrades on a testnet Bonus Lesson 13: Full Stack Defi Defi Stake Yield Brownie Scripts & Tests Testing our Defi Stake Yield Brownie Dapp Front End / Full Stack Closing and Summary Security Where do I go now? Learning More Community Hackathons","title":"Lesson 12: Upgrades"},{"location":"tools-libraries/ethereum-docs/","text":"The Truffle Suite gets developers from idea to dapp as comfortably as possible. \u00b6 Step 1: Head over to Ethereum \u00b6 Introduction \u00b6 This documentation is designed to help you build with Ethereum. It covers Ethereum as a concept, explains the Ethereum tech stack, and documents advanced topics for more complex applications and use cases. Open-source \u00b6 This is an open-source community effort, so feel free to suggest new topics, add new content, and provide examples wherever you think it might be helpful. All documentation can be edited via GitHub Drizzle \u00b6 A collection of front-end libraries that make writing dapp front-ends easier and more predictable. The core of Drizzle is based on a Redux store, so you have access to the spectacular development tools around Redux. We take care of synchronizing your contract data, transaction data and more.","title":"Ethereum Documentation"},{"location":"tools-libraries/ethereum-docs/#the-truffle-suite-gets-developers-from-idea-to-dapp-as-comfortably-as-possible","text":"","title":"The Truffle Suite gets developers from idea to dapp as comfortably as possible."},{"location":"tools-libraries/ethereum-docs/#step-1-head-over-to-ethereum","text":"","title":"Step 1: Head over to Ethereum"},{"location":"tools-libraries/ethereum-docs/#introduction","text":"This documentation is designed to help you build with Ethereum. It covers Ethereum as a concept, explains the Ethereum tech stack, and documents advanced topics for more complex applications and use cases.","title":"Introduction"},{"location":"tools-libraries/ethereum-docs/#open-source","text":"This is an open-source community effort, so feel free to suggest new topics, add new content, and provide examples wherever you think it might be helpful. All documentation can be edited via GitHub","title":"Open-source"},{"location":"tools-libraries/ethereum-docs/#drizzle","text":"A collection of front-end libraries that make writing dapp front-ends easier and more predictable. The core of Drizzle is based on a Redux store, so you have access to the spectacular development tools around Redux. We take care of synchronizing your contract data, transaction data and more.","title":"Drizzle"},{"location":"tools-libraries/hardhat/","text":"Hardhat allows you to write, compile and debug Solidity code. \u00b6 Step 1: Head over to Hardhat \u00b6 Introduction \u00b6 Easily deploy your contracts, run tests and debug Solidity code without dealing with live environments. Hardhat Network is a local Ethereum network designed for development. Hardhat is the best choice for Solidity debugging. You get Solidity stack traces, console.log and explicit error messages when transactions fail.","title":"Hardhat"},{"location":"tools-libraries/hardhat/#hardhat-allows-you-to-write-compile-and-debug-solidity-code","text":"","title":"Hardhat allows you to write, compile and debug Solidity code."},{"location":"tools-libraries/hardhat/#step-1-head-over-to-hardhat","text":"","title":"Step 1: Head over to Hardhat"},{"location":"tools-libraries/hardhat/#introduction","text":"Easily deploy your contracts, run tests and debug Solidity code without dealing with live environments. Hardhat Network is a local Ethereum network designed for development. Hardhat is the best choice for Solidity debugging. You get Solidity stack traces, console.log and explicit error messages when transactions fail.","title":"Introduction"},{"location":"tools-libraries/remix-ide/","text":"The Remix IDE allows you to write, compile and debug Solidity code. \u00b6 Step 1: Head over to Remix IDE \u00b6 Introduction \u00b6 The Remix IDE is a Solidity specific IDE to help you write smart contracts. It is an alternative to VScode.","title":"Remix IDE"},{"location":"tools-libraries/remix-ide/#the-remix-ide-allows-you-to-write-compile-and-debug-solidity-code","text":"","title":"The Remix IDE allows you to write, compile and debug Solidity code."},{"location":"tools-libraries/remix-ide/#step-1-head-over-to-remix-ide","text":"","title":"Step 1: Head over to Remix IDE"},{"location":"tools-libraries/remix-ide/#introduction","text":"The Remix IDE is a Solidity specific IDE to help you write smart contracts. It is an alternative to VScode.","title":"Introduction"},{"location":"tools-libraries/truffle/","text":"The Truffle Suite gets developers from idea to dapp as comfortably as possible. \u00b6 Step 1: Head over to Truffle \u00b6 Truffle \u00b6 A world class development environment, testing framework and asset pipeline for blockchains using the Ethereum Virtual Machine (EVM), aiming to make life as a developer easier. Ganache \u00b6 A world class development environment, testing framework and asset pipeline for blockchains using the Ethereum Virtual Machine (EVM), aiming to make life as a developer easier. Drizzle \u00b6 A collection of front-end libraries that make writing dapp front-ends easier and more predictable. The core of Drizzle is based on a Redux store, so you have access to the spectacular development tools around Redux. We take care of synchronizing your contract data, transaction data and more.","title":"Truffle"},{"location":"tools-libraries/truffle/#the-truffle-suite-gets-developers-from-idea-to-dapp-as-comfortably-as-possible","text":"","title":"The Truffle Suite gets developers from idea to dapp as comfortably as possible."},{"location":"tools-libraries/truffle/#step-1-head-over-to-truffle","text":"","title":"Step 1: Head over to Truffle"},{"location":"tools-libraries/truffle/#truffle","text":"A world class development environment, testing framework and asset pipeline for blockchains using the Ethereum Virtual Machine (EVM), aiming to make life as a developer easier.","title":"Truffle"},{"location":"tools-libraries/truffle/#ganache","text":"A world class development environment, testing framework and asset pipeline for blockchains using the Ethereum Virtual Machine (EVM), aiming to make life as a developer easier.","title":"Ganache"},{"location":"tools-libraries/truffle/#drizzle","text":"A collection of front-end libraries that make writing dapp front-ends easier and more predictable. The core of Drizzle is based on a Redux store, so you have access to the spectacular development tools around Redux. We take care of synchronizing your contract data, transaction data and more.","title":"Drizzle"}]}